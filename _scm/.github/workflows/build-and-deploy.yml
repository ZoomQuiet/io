name: Mdbook build and deploy

on:
  push:
    branches: ["main"]  # 仅在推送到 main 分支时触发

permissions:
  contents: write  # 允许对代码内容进行写操作
  pages: write     # 允许 GitHub Pages 进行写操作
  id-token: write  # 允许身份验证


jobs:
  build-and-deploy:

    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: 'latest'
          #mdbook-version: '0.4.10'

      # Install mdbook-pagetoc preprocessor
      - name: Install mdbook-pagetoc
        run: |
          cargo install mdbook-pagetoc

      ## Install mdbook-theme preprocessor
      #- name: Install mdbook-theme
      #  run: |
      #    cargo install mdbook-theme
      ## Install mdbook-theme-ace backend theme
      #- name: Install mdbook-theme-ace
      #  run: |
      #    cargo install mdbook-theme-ace

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Generate RSS feed
      - name: Generate RSS feed + inject updating into README.md
        run: |
          ls -al ./
          inv ver
          inv gen 
          echo "RSS feed ..etc. generation finished."
          ls -al ./
          head -42 rss.xml

      # Step 5: Build the mdbook
      - name: Build mdBook
        run: |
          mkdir -p book
          chmod -Rvf 777 book
          ls -al ./
          mdbook build 
          echo "Mdbook build finished."
      # iff mdBook error, usage below to debug
      #   export RUST_LOG=debug
      #   export RUST_BACKTRACE=1
      # Step 6: Check and prepare files for deployment
      - name: Prepare deployment files
        run: |
          echo "Listing generated files in book/"
          ls -al book/
          echo "Copy RSS and other files to book directory"
          cp -v rss.xml book/
          cp -v CNAME book/
          cp -v .nojekyll book/
          mv -v book ../

      # Step 7: Checkout the gh-pages branch
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      # Step 8: Deploy to gh-pages branch
      - name: Deploy to gh-pages
        run: |
          rm -rfv *
          cp -rv ../book/* .
          ls -al ./
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy static site to gh-pages branch (a)$(date '+%y%m%d %H%M%S')" || echo "No changes to commit"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的 token
